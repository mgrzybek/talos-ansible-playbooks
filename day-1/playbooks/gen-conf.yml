###############################################################################
# All

- hosts: all
  gather_facts: no
  become: false
  run_once: true
  tasks:
  - name: Configuration generation | Assert variables
    assert:
      fail_msg: cluster_name and cilium_version variables must be defined
      that:
      - cluster_name is defined
      - cluster_name | length > 0
      - cilium.version is defined
      - cilium.version | length > 3

  - name: Configuration generation | Check actual configuration
    register: controlplane
    delegate_to: localhost
    stat:
      path: '{{ inventory_dir }}/controlplane.yaml'

  - name: Configuration generation | Add Cilium Helm repo
    delegate_to: localhost
    ansible.builtin.command: helm repo add cilium https://helm.cilium.io/

  # Cilium and L2 announcements: https://docs.cilium.io/en/latest/network/l2-announcements/
  # k8sClientRateLimit.qps and k8sClientRateLimit.burst should be tuned according to the size of the deployment
  # KubePrism is used (localhost:7445)
  # TODO: check if we need to add devices using options
  - name: Configuration generation | Create Cilium manifest
    delegate_to: localhost
    register: result
    changed_when: false
    ansible.builtin.command: |
      helm template \
        cilium \
        cilium/cilium \
        --version {{ cilium.version }} \
        --namespace kube-system \
        --set ipam.mode=kubernetes \
        --set kubeProxyReplacement=true \
        --set securityContext.capabilities.ciliumAgent="{CHOWN,KILL,NET_ADMIN,NET_RAW,IPC_LOCK,SYS_ADMIN,SYS_RESOURCE,DAC_OVERRIDE,FOWNER,SETGID,SETUID}" \
        --set securityContext.capabilities.cleanCiliumState="{NET_ADMIN,SYS_ADMIN,SYS_RESOURCE}" \
        --set cgroup.autoMount.enabled=false \
        --set cgroup.hostRoot=/sys/fs/cgroup \
        --set k8sServiceHost=localhost \
        --set k8sServicePort=7445 \
        --set l2announcements.enabled=true \
        --set l2announcements.leaseDuration={{ cilium.l2.announcements.lease.duration }} \
        --set l2announcements.leaseRenewDeadline={{ cilium.l2.announcements.lease.renew_deadline }} \
        --set l2announcements.leaseRetryPeriod={{ cilium.l2.announcements.lease.retry_period }} \
        --set k8sClientRateLimit.qps={{ cilium.k8s_client_rate_limit.qps }} \
        --set k8sClientRateLimit.burst={{ cilium.k8s_client_rate_limit.burst }}

  - name: Configuration generation | Create cilium patch
    set_fact:
      cilium:
        cluster:
          inlineManifests:
          - name: cilium
            contents: |
              {% for line in result.stdout_lines %}
              {{ line }}
              {% endfor %}

  - name: Configuration generation | Write Cilium patch
    delegate_to: localhost
    ansible.builtin.copy:
      content: '{{ cilium | to_yaml }}'
      dest: ../patchs/controlplane.yaml

  - name: Configuration generation | Create talos configuration for the cluster (talosconfig, worker.yaml, controlplane.yaml)
    when: controlplane.stat.exists == false
    delegate_to: localhost
    ansible.builtin.command: |
      talosctl gen config {{ cluster_name }} https://{{ inventory_hostname }}:6443 \
        --config-patch @../patchs/all.yaml \
        --config-patch-control-plane @../patchs/controlplane.yaml \
        -o {{ inventory_dir }}

###############################################################################
# Controlplane

- hosts: controlplane
  gather_facts: no
  become: false
  tasks:
  - name: Configuration generation | Import tasks
    include_tasks: '{{ inventory_dir }}/tasks/gen-host-conf.yml'

###############################################################################
# Worker

- hosts: worker
  gather_facts: no
  become: false
  tasks:
  - name: Configuration generation | Import tasks
    include_tasks: '{{ inventory_dir }}/tasks/gen-host-conf.yml'

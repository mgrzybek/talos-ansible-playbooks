- hosts: controlplane
  gather_facts: no
  become: false
  run_once: true
  tasks:
  - name: Ceph Cluster | Get the number of nodes
    delegate_to: localhost
    register: nodes
    ansible.builtin.command: kubectl get nodes
    changed_when: false

  - name: Ceph Cluster | Create the cluster
    delegate_to: localhost
    register: cluster
    ansible.builtin.command: kubectl apply -f {{ inventory_dir }}/day-1/manifests/rook.cluster.yaml --wait=true
    changed_when: cluster.stdout | regex_search("configured")

  - name: Ceph Cluster | Wait for the cluster to be started
    until: (bootstrap.stdout | from_yaml).status.phase == "Ready"
    delay: '{{ waiting_time_minutes * 60 }}'
    retries: '{{ nodes.stdout_lines | length - 1 }}'
    register: bootstrap
    delegate_to: localhost
    ansible.builtin.command: kubectl -n rook-ceph get CephCluster rook-ceph -o yaml
    failed_when: false
    changed_when: false

  - name: Ceph Cluster | Create the pool
    delegate_to: localhost
    register: pool
    ansible.builtin.command: kubectl apply -f {{ inventory_dir }}/day-1/manifests/rook.pool.yaml --wait=true
    changed_when: pool.stdout | regex_search("configured")

  - name: Ceph Cluster | Create the Cilium L2 Load Balancer for the manager
    delegate_to: localhost
    when:
    - ceph.manager_endpoint_cidr is defined
    - ceph.manager_endpoint_cidr | length > 8
    kubernetes.core.k8s:
      wait: true
      state: present
      definition:
        apiVersion: v1
        kind: Service
        metadata:
          annotations:
            io.cilium/lb-ipam-ips: '{{ ceph.manager_endpoint_cidr }}'
          labels:
            app: rook-ceph-mgr
            rook_cluster: rook-ceph
            serviceType: core
          name: rook-ceph-mgr-dashboard-cilium
          namespace: rook-ceph
        spec:
          internalTrafficPolicy: Cluster
          ipFamilies:
          - IPv4
          ipFamilyPolicy: SingleStack
          ports:
          - name: https-dashboard
            port: 8443
            protocol: TCP
            targetPort: 8443
          selector:
            app: rook-ceph-mgr
            mgr_role: active
            rook_cluster: rook-ceph
          type: LoadBalancer
